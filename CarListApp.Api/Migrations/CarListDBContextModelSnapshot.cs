// <auto-generated />
using System;
using CarListApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarListApp.Api.Migrations
{
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
    [DbContext(typeof(CarsInventoryDBContext))]
    partial class CarsInventoryDBContextModelSnapshot : ModelSnapshot
========
    [DbContext(typeof(CarListDBContext))]
    partial class CarListDBContextModelSnapshot : ModelSnapshot
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CarListApp.Api.Data.ApiUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CarListApp.Api.Data.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DealershipId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");
========
                    b.Property<double>("Vin")
                        .HasMaxLength(50)
                        .HasColumnType("REAL");
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs

                    b.HasKey("Id");

                    b.HasIndex("DealershipId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DealershipId = 1,
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Make = "BMW",
                            Model = "5 series",
                            Vin = "F45T"
========
                            Make = "Audi",
                            Model = "e-tron GT",
                            Vin = 5133.0
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        },
                        new
                        {
                            Id = 2,
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            DealershipId = 3,
                            Make = "Mercedes-Benz",
                            Model = "S-Class",
                            Vin = "K00L-13"
========
                            DealershipId = 1,
                            Make = "Lexus",
                            Model = "LS",
                            Vin = 848.0
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        },
                        new
                        {
                            Id = 3,
                            DealershipId = 2,
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Make = "Lamborghini",
                            Model = "Veneno",
                            Vin = "D14BL0"
========
                            Make = "Jaguar",
                            Model = "I-Pace",
                            Vin = 2020.0
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        });
                });

            modelBuilder.Entity("CarListApp.Api.Data.Dealership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Dealerships");

                    b.HasData(
                        new
                        {
                            Id = 1,
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Address = "Sabana Norte",
                            Name = "San Jose"
========
                            Address = "San Jose",
                            Name = "SJO"
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        },
                        new
                        {
                            Id = 2,
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Address = "Paseo de las Flores",
                            Name = "Heredia"
========
                            Address = "Tres Rios",
                            Name = "Cartago"
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        },
                        new
                        {
                            Id = 3,
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Address = "Jaco",
                            Name = "Puntarenas"
========
                            Address = "La Fortuna",
                            Name = "Alajuela"
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Id = "a9cb0155-8265-4dd8-a214-0b6b50cac1b9",
========
                            Id = "f0f56742-b899-49c7-8a4d-de331c9fbe11",
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                            Id = "c842da7e-ef55-42f3-a0d6-50d9d0d47ded",
========
                            Id = "6e70afb6-de00-4bfd-bacc-0a6cf768a2c8",
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CarListApp.Api.Data.Car", b =>
                {
<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                    b.HasOne("CarListApp.Api.Data.Dealership", "dealership")
========
                    b.HasOne("CarListApp.Api.Data.Dealership", "Dealership")
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                        .WithMany("Cars")
                        .HasForeignKey("DealershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

<<<<<<<< HEAD:CarListApp.Api/Migrations/CarsInventoryDBContextModelSnapshot.cs
                    b.Navigation("dealership");
========
                    b.Navigation("Dealership");
>>>>>>>> addingAPI:CarListApp.Api/Migrations/CarListDBContextModelSnapshot.cs
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CarListApp.Api.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CarListApp.Api.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarListApp.Api.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CarListApp.Api.Data.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarListApp.Api.Data.Dealership", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
